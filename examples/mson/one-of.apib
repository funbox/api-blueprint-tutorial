FORMAT: 1A

# Array API

Example of `One Of` keyword.

# Data Structures

## Point (array[number], min-length="2", max-length="2")

## Zone

Correct usage of One Of`

+ id (number, required)

+ One Of
    + Properties
        + type: polygon (string, required, fixed)
        + points (array[Point], required)
    + Properties
        + type: circle (string, required, fixed)
        + center (Point, required)
        + radius (number, required)

## User

Incorrect usage of `One Of`.

The next example assumes that a user can be a regular user with only a set of groups or can be an administrator with some permissions.
This approach is incorrect. If a user has both fields (groups and permissions), such user will be valid for both `One Of` options.
That will cause an error in a validator because using `One Of` implies that data should match only one option.

There are two ways to solve this: either get rid of `One Of` and make `permissions` field optional or add a new field `type` with a fixed value as in the example above.

+ name (string, required)

+ One Of
    + Properties
        + groups (array[string], required)
    + Properties
        + groups (array[string], required)
        + permissions (array[string], required)

# IncorrectComment

Example of usage `One Of` along with the `fixed-type` attribute.

With the `fixed-type` attribute applied, the structure of an object is being fixed: all available fields are marked as `required`
and `"additionalProperties": false` appears in resulting schema.
If one of the `One Of` options has a property that is not listed in object properties, that property will be accounted as invalid.
In the given example the `author` object has only the `name` field but the `One Of` section provides the object with additional fields `type` and `id`.
That means, if an actual object has only `name` field, validation will fail due to `One Of`. Otherwise, if an actual object has `name` and `type`, validation will fail due to `"additionalProperties": false` (`type` is not in the list of available fields of the object).

+ id (number, required)
+ text (string, required)
+ author (object, fixed-type)
    + name (string, required)

    + One Of
        + Properties
            + type: guest (string, required, fixed)
        + Properties
            + type: registered (string, required, fixed)
            + id (number, required)

# CorrectComment

To fix issue mentioned above, you can either remove the `fixed-type` attribute or git rid of the `One Of` section
or put properties from `One Of` options into the objects properties list.

+ id (number, required)
+ text (string, required)
+ author (object, fixed-type)
    + name (string, required)

    + type (string)
    + id (optional)

    + One Of
        + Properties
            + type: guest (string, required, fixed)
        + Properties
            + type: registered (string, required, fixed)
            + id (number, required)
